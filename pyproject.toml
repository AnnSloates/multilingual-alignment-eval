[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "multilingual-alignment-eval"
version = "0.1.0"
description = "A comprehensive toolkit for evaluating language model alignment across multiple languages"
readme = "README.md"
authors = [
    {name = "Florence Stokes", email = "florence.stokes@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = ["nlp", "multilingual", "evaluation", "ai-safety", "alignment", "llm"]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.22.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "plotly>=5.11.0",
    "click>=8.0.0",
    "httpx>=0.23.0",
    "tenacity>=8.1.0",
    "tiktoken>=0.3.0",
    "python-dotenv>=0.19.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "tabulate>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
models = [
    "transformers>=4.25.0",
    "torch>=1.13.0",
]
api = [
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
]
all = [
    "multilingual-alignment-eval[dev,models,api]",
]

[project.scripts]
mleval = "mleval:cli"

[project.urls]
Homepage = "https://github.com/yourusername/multilingual-alignment-eval"
Documentation = "https://multilingual-alignment-eval.readthedocs.io"
Repository = "https://github.com/yourusername/multilingual-alignment-eval"
Issues = "https://github.com/yourusername/multilingual-alignment-eval/issues"

[tool.setuptools]
packages = ["scripts", "tests", "config", "prompts"]

[tool.setuptools.package-data]
config = ["*.json"]
prompts = ["templates/*.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "--strict-markers --tb=short"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["scripts"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]